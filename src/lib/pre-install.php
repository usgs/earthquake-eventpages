<?php

date_default_timezone_set('UTC');

$OLD_PWD = $_SERVER['PWD'];

// work from lib directory
chdir(dirname($argv[0]));

if ($argv[0] === './pre-install.php' || $_SERVER['PWD'] !== $OLD_PWD) {
  // pwd doesn't resolve symlinks
  $LIB_DIR = $_SERVER['PWD'];
} else {
  // windows doesn't update $_SERVER['PWD']...
  $LIB_DIR = getcwd();
}
$APP_DIR = dirname($LIB_DIR);
$HTDOCS_DIR = $APP_DIR . '/htdocs';
$CONF_DIR = $APP_DIR . '/conf';

$HTTPD_CONF = $CONF_DIR . '/httpd.conf';
$CONFIG_FILE_INI = $CONF_DIR . '/config.ini';
$CONFIG_FILE_PHP = $CONF_DIR . '/config.inc.php';


chdir($LIB_DIR);

if (!is_dir($CONF_DIR)) {
  mkdir($CONF_DIR, 0755, true);
}

// check for non-interactive mode
foreach ($argv as $arg) {
  if ($arg === '--non-interactive') {
    define('NON_INTERACTIVE', true);
  }
}
if (!defined('NON_INTERACTIVE')) {
  define('NON_INTERACTIVE', false);
}

// Interactively prompts user for config. Writes CONFIG_FILE_INI
include_once 'configure.inc.php';

// Parse the configuration
$CONFIG = parse_ini_file($CONFIG_FILE_INI);

// Write the HTTPD configuration file
file_put_contents($HTTPD_CONF, '
  ## autogenerated at ' . date('r') . '

  Alias ' . $CONFIG['MOUNT_PATH'] . ' ' . $HTDOCS_DIR . '

  RewriteEngine on

  # unknown events
  RewriteCond %{REQUEST_URI} !' . $CONFIG['MOUNT_PATH'] . '/unknown.php
  RewriteRule ^' . $CONFIG['MOUNT_PATH'] . '/unknown$' . $CONFIG['MOUNT_PATH'] . '/unknown.php [L,PT]

  # event ids
  RewriteCond %{REQUEST_URI} !' . $CONFIG['MOUNT_PATH'] . '/(index|terms|unknown).php
  # query string must be empty
  RewriteCond %{QUERY_STRING} ^$
  # request must not contain "?"
  RewriteCond %{THE_REQUEST} !\?
  RewriteRule ^' . $CONFIG['MOUNT_PATH'] . '/([^/&\'"\\?]+)$ ' . $CONFIG['MOUNT_PATH'] . '/index.php?eventid=$1 [L,PT]

  # block direct requests to index.php or unknown.php
  RewriteRule ^' . $CONFIG['MOUNT_PATH'] . '/(index|unknown).php - [R=404,L]

  <Location ' . $CONFIG['MOUNT_PATH'] . '>
    ExpiresActive on
    ExpiresDefault "access plus 1 days"

    # apache 2.2
    <IfModule !mod_authz_core.c>
      Order allow,deny
      Allow from all
      <LimitExcept GET>
        Deny from all
      </LimitExcept>
    </IfModule>
    # apache 2.4
    <IfModule mod_authz_core.c>
      Require all granted
      <LimitExcept GET>
        Require all denied
      </LimitExcept>
    </IfModule>
  </Location>
');
